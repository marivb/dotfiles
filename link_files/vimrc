" vim-plug dependencies
call plug#begin('~/.vimplugs')

Plug 'junegunn/vim-easy-align'
Plug 'slim-template/vim-slim'
Plug 'editorconfig/editorconfig-vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'Valloric/YouCompleteMe'
Plug 'elzr/vim-json'
Plug 'vim-airline/vim-airline'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'suan/vim-instant-markdown'

call plug#end()

let g:vim_markdown_folding_disabled = 1

" File and buffer configs
set noswapfile
set hidden
set number

" set cursorline
" hi CursorLine term=none cterm=none ctermbg=DarkGrey

" Open new panes on bottom and right
set splitbelow
set splitright

" Convert tabs to spaces, use 2 spaces in place of tabs.
set expandtab
set tabstop=2
set shiftwidth=2

" Enable syntax and file type detection
syntax enable
filetype plugin indent on

" File type associations
au BufRead,BufNewFile Dockerfile* set filetype=dockerfile
au BufRead,BufNewFile .gitconfig* set filetype=gitconfig

" Remove trailing whitespaces before write, except for binary files
func! StripTrailingWhitespace()
  normal mZ
  %s/\s\+$//e
  normal `Z
endfunc
autocmd BufWrite * if ! &bin | call StripTrailingWhitespace() | endif

" File name tab completion functions like bash, it gives you a list of
" options instead of automatically filling in the first possible match.
set wildmenu
" It will however, with this option, complete up to the first character of
" ambiguity.
set wildmode=list:longest

" No hiding double quotes in JSON
let g:vim_json_syntax_conceal = 0
" Fold JSONs by syntax
au BufRead,BufNewFile *.json set foldmethod=syntax

" Airline prefs
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

" CtrlP

let g:ctrlp_max_height = 20
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_match_window_bottom = 1
let g:ctrlp_switch_buffer = 2
let g:ctrlp_working_path_mode = 2
let g:ctrlp_mruf_include = '\.py$\|\.rb$|\.coffee|\.haml'
let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$'
let g:ctrlp_follow_symlinks = 1
let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'dir', 'rtscript']

" for CtrlP
map <leader>ff :CtrlP<CR>
map <leader>fb :CtrlPBuffer<CR>
map <leader>ft :CtrlPTag<CR>
map <leader>fq :CtrlPQuickFix<CR>
map <leader>fd :CtrlPDir<CR>
map <leader>fr :CtrlPRTS<CR>
map <leader>fm :CtrlPMRU<CR>

" Tab navigation like web browers
nmap <C-S-Left> :tabprevious<CR>
map  <C-S-Left> :tabprevious<CR>
imap <C-S-Left> <ESC>:tabprevious<CR>i
nmap <C-S-Right>   :tabnext<CR>
map  <C-S-Right>   :tabnext<CR>
imap <C-S-Right>   <ESC>:tabnext<CR>i
nmap <C-t>          :tabnew<CR>
imap <C-t>     <ESC>:tabnew<CR>
nmap <C-c>          :tabclose<CR>
imap <C-c> <ESC>:tabclose<CR>
